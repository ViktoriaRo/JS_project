{"version":3,"sources":["Components/Titles.js","Components/Form.js","Components/Weather.js","Components/Home.js","Components/About.js","actions/postAction.js","Components/Error.js","Components/Navigation.js","Components/FeedbackContainer.js","Components/FeedbackForm.js","Components/Feedback.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Titles","react_default","a","createElement","className","Form","props","onSubmit","getWeather","id","type","name","placeholder","Weather","city","country","temperature","humidity","description","error","API_KEY","Home","state","undefined","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","_this","setState","sys","main","temp","weather","stop","this","Components_Titles","Components_Form","Components_Weather","React","Component","About","handleClick","deletePost","posts","postList","length","map","post","key","title","body","onClick","connect","dispatch","Error","Navigation","to","NavLink","FeedbackContainer","_ref","feedback","feed","content","surname","FeedbackForm","handleChange","Object","defineProperty","handleSubmit","addFeedback","required","onChange","Feedback","Math","random","toConsumableArray","Components_FeedbackForm","Components_FeedbackContainer","App","BrowserRouter","Components_Navigation","Switch","Route","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initState","rootReducer","arguments","action","newPosts","filter","objectSpread","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aaa7a559.chunk.js","sourcesContent":["import React from 'react';\n\nconst Titles = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"title-container__title\"> \n\t\t\t\t\tWeather finder\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"title-container__subtitle\">\n\t\t\t\t\tFind out temperature, conditions and other...\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n};\n\nexport default Titles;","import React from 'react';\n\nconst Form = (props) => {\n\treturn (\n\t\t<form onSubmit={props.getWeather}>\n\t\t\t<input id=\"name\" type=\"text\" name=\"city\" placeholder='City...' />\n\t\t\t<input id=\"name\" type=\"text\" name=\"country\" placeholder='Country...' />\n\t\t\t<button>Get Weather </button>\n\t\t</form>\n\t);\n};\n\nexport default Form;\n\n\n\n","import React from 'react';\n\nconst Weather = (props) => {\n\treturn (\n\t\t<div className=\"Weather__info\">\n\t\t\t{ \n\t\t\t\tprops.city && props.country && <p className=\"weather__key\">Location: \n\t\t\t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n\t\t\t\t</p> \n\t\t\t}\n\t\t\t{ \n\t\t\t\tprops.temperature && <p className=\"weather__key\">Temperature: \n\t\t\t\t<span className=\"weather__value\"> { props.temperature } &#8451;</span>\n\t\t\t\t</p> \n\t\t\t}\n\t\t\t{ \n\t\t\t\tprops.humidity && <p className=\"weather__key\">Humidity: \n\t\t\t\t<span className=\"weather__value\"> { props.humidity } %</span>\n\t\t\t\t</p>\n\t\t\t}\n\t\t\t{ \n\t\t\t\tprops.description && <p className=\"weather__key\">Conditions: \n\t\t\t\t<span className=\"weather__value\"> { props.description }</span>\n\t\t\t\t</p>\n\t\t\t}\n\t\t\t{ \n\t\t\t\tprops.error && <p className=\"weather__error\">{ props.error }</p>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Weather;","import React from 'react';\nimport Titles from './Titles';\nimport Form from './Form';\nimport Weather from './Weather';\n\nconst API_KEY = \"10bddaa697444e217f0c7f6b862097bd\";\n\nclass Home extends React.Component {\n\tstate = {\n\t\tcity: undefined,\n\t\tcountry: undefined,\n\t\ttemperature: undefined,\n\t\thumidity: undefined,\n\t\tdescription: undefined,\n\t\terror: undefined\n\t}\n\n\t getWeather = async (e) => {\n    \te.preventDefault();\n    \tconst city = e.target.elements.city.value;\n    \tconst country = e.target.elements.country.value;\n\t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\t\tconst data = await api_call.json();\n\t\tif (city && country) {\n\t\t\tthis.setState({\n\t\t\t\tcity: data.name,\n\t\t\t\tcountry: data.sys.country,\n\t\t\t\ttemperature: data.main.temp,\n\t\t\t\thumidity: data.main.humidity,\n\t\t\t\tdescription: data.weather[0].description,\n\t\t\t\terror: \"\"\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcity: undefined,\n\t\t\t\tcountry: undefined,\n\t\t\t\ttemperature: undefined,\n\t\t\t\thumidity: undefined,\n\t\t\t\tdescription: undefined,\n\t\t\t\terror: \"Please enter the value.\"\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-5 title-container\">\n\t\t\t\t\t\t\t\t<Titles />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-7 form-container\">\n\t\t\t\t\t\t\t\t<Form getWeather={this.getWeather} />\n\t\t\t\t\t\t\t\t<Weather \n\t\t\t\t\t\t\t\t\ttemperature={this.state.temperature}\n\t\t\t\t\t\t\t\t\thumidity={this.state.humidity}\n\t\t\t\t\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\t\t\t\t\terror={this.state.error} />\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t);\n\t}\n};\t\t\n\nexport default Home;","import React from 'react';\nimport Titles from './Titles';\nimport { connect } from 'react-redux';\nimport { deletePost } from '../actions/postAction';\n\nclass About extends React.Component {\n\thandleClick = () => {\n\t\tthis.props.deletePost(this.props.posts.id);\n\t}\n\n\trender(){\n\t\tconst { posts } = this.props;\n\t\tconst postList = posts.length ? (\n\t\t\tposts.map(post => {\n\t\t\t\treturn (\n\t\t          <div className=\"post card\" key={post.id}>\n\t\t            <div className=\"card-content\">\n\t\t                <span className=\"card-title red-text\">{post.title}</span>\n\t\t              <p>{post.body}</p>\n\t\t            </div>\n\t\t          </div>\n\t\t        )\n      \t\t})\n   \t\t ) : (\n     \t <div className=\"center\">No posts to show</div>\n  \t  );\n\n    return (\n    \n      <div className=\"wrapper\">\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-5 title-container\">\n\t\t\t\t\t\t\t\t<Titles />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-7 form-container\">\n\t\t\t\t\t\t          {postList}\n\t\t              \t\t\t<button className=\"right\" onClick={this.handleClick}>Delete posts</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    )\n\t}\n};\t\t\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tposts: state.posts\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdeletePost: (id) => {dispatch(deletePost(id))}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","export const deletePost = (id) => {\n\treturn {\n\t\ttype: 'DELETE_POST',\n\t\tid\n\t}\n}\n","import React from 'react';\n\nconst Error = () => {\n\treturn (\n\t\t<div>\n\t\t\t<p>Error: path does not exist!!!!</p>\n\t\t</div>\n\t);\n};\n\nexport default Error;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n\treturn (\n\t\t<div className=\"navbar-fixed\">\n\t\t\t<nav className=\"nav-wrapper red darken-3\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"brand-logo\" to=\"/\"><i className=\"material-icons\">cloud </i> Weather App</div>\n\t\t\t\t\t<ul className=\"right\">\n\t\t\t\t\t\t<li><NavLink to=\"/\"> Home</NavLink> </li>\n\t\t\t\t\t\t<li><NavLink to=\"/about\"> About</NavLink></li>\n\t\t\t\t\t\t<li><NavLink to=\"/feedback\"> Feedback</NavLink></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t);\n} \n\nexport default Navigation;","import React from 'react'\n\nconst FeedbackContainer = ({feedback}) => {\n\n  return (\n    <div className=\"ninja-list\">\n      { \n        feedback.map(feed => {\n          return feed.content !== '' ? (\n            <div className=\"feed\" key={feed.id}>\n              <div  className=\"weather__key\">{ feed.name } { feed.surname }</div>\n              <div className=\"weather__value\">{ feed.content }</div>\n            </div>\n          ) : (<div  className=\"weather__key\"> You should input your feedback </div>)\n        })\n      }\n    </div>\n  );\n\n}\n\nexport default FeedbackContainer","import React, { Component } from 'react'\n\nclass FeedbackForm extends Component {\n  state = {\n    name: null,\n    surname: null,\n    content: null\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addFeedback(this.state);\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" required id=\"name\" onChange={this.handleChange} placeholder='Name...' />\n          <input type=\"text\" id=\"surname\" onChange={this.handleChange} placeholder='Surname...' />\n          <button>Submit feedback</button>\n          <textarea required className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} placeholder='Your feedback...' />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default FeedbackForm","import React, { Component } from 'react';\nimport Titles from './Titles';\nimport FeedbackContainer from './FeedbackContainer'\nimport FeedbackForm from './FeedbackForm'\n\nclass Feedback extends Component {\n  state = {\n    feedback: [\n\t\t{\n\t\t\tname: 'John', \n\t\t\tsurname: 'Smith',\n\t\t\tcontent: 'Easy to use. Nice interface. I like it!',\n\t\t\tid: 1\n\t\t}\n\t]\n  }\n\n  addFeedback = (feed) => {\n  \tfeed.id = Math.random();\n  \tlet feedback = [...this.state.feedback, feed];\n  \tthis.setState({\n  \t\tfeedback: feedback\n  \t});\n  }\n\n  render() {\n    return (\n    \t<div className=\"wrapper\">\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-5 title-container\">\n\t\t\t\t\t\t\t\t<Titles />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-7 form-container\">\n        \t\t\t\t\t\t<FeedbackForm addFeedback={this.addFeedback}/>\n\t\t\t\t\t\t\t\t<FeedbackContainer feedback={this.state.feedback}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nexport default Feedback;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './Components/Home';\nimport About from './Components/About';\nimport Error from './Components/Error';\nimport Navigation from './Components/Navigation';\nimport Feedback from './Components/Feedback';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" component={Home} exact />\n\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t\t<Route path=\"/feedback\" component={Feedback} />\n\t\t\t\t\t\t<Route component={Error} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n};\t\t\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n\tposts: [\n\t\t{\n\t\t\tid: '1', \n\t\t\ttitle: 'OpenWeather API', \n\t\t\tbody: 'Openweather is a small IT company, established in 2014 by a group of engineers and experts in Big Data, data processing, and satellite imagery processing. They do very simple and fast APIs to work with their vast database of weather data, satellite imagery and other environmental data. '\n\t\t},\n\t    {\n\t    \tid: '2', \n\t    \ttitle: 'Author', \n\t    \tbody: 'Victoria Rotaru is a third year student at Innopolis University. She currently takes course \"JS for Enterprise Development\", where she had a task to create a JS application using React library. As you can see the application that you use is her work. Here you can determine cuurent weather by city, also leave a feedback and read about application.'\n\t    }\n\t]\n}\n\nconst rootReducer = (state = initState, action) => {\n\tif (action.type === 'DELETE_POST') {\n\t\tlet newPosts = state.posts.filter(post => {\n\t\t\tpost.body = 'deleted'\n\t\t\treturn action.id !== post.id\n\t\t});\n\t\treturn{\n\t\t\t...state,\n\t\t\tposts: newPosts\n\t\t}\n\t}\n\treturn state;\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}